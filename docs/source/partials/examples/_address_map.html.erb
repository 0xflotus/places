<link rel="stylesheet" href="//cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
<script src="//cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script>
<div id="map-example" class="form-group">
  <div class="left-column">
    <input type="text" id="input-map" class="form-control" placeholder="Where are we going?" />
  </div>
  <div class="right-column">
    <div id="map"></div>
  </div>
</div>

<style>
  #map-example #map, #map-example {height: 200px}
  #map-example .left-column {float: left; width: 50%}
  #map-example .right-column {margin-left: 52%}
</style>

<script>
  var placesAutocomplete = places({
    container: document.querySelector('#input-map'),
  });

  var map = L.map('map');
  var osmLayer = new L.TileLayer(
    'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      minZoom: 1,
      maxZoom: 12,
      attribution: 'Map data Â© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors'
    }
  );

  var markers = [];

  map.setView(new L.LatLng(0, 0), 1);
  map.addLayer(osmLayer);

  placesAutocomplete.on('suggestions', updateMap);
  placesAutocomplete.on('change', clearMapWhenNoQuery);

  function updateMap(e) {
    markers.forEach(removeMarker);
    markers = [];
    e.suggestions.forEach(addMarker);
    findBestZoom();
  }

  function addMarker(suggestion) {
    var marker = L.marker([suggestion.lat, suggestion.lng]);
    marker.addTo(map);
    markers.push(marker);
  }

  function removeMarker(marker) {
    map.removeLayer(marker);
  }

  function findBestZoom() {
    var featureGroup = L.featureGroup(markers);
    map.fitBounds(featureGroup.getBounds().pad(0.5));
  }

  function clearMapWhenNoQuery(e) {
    if (e.query === '') {
      markers.forEach(removeMarker);
    }
  }
</script>
